# -*- coding: utf-8 -*-
"""Final_module_2_Capstron_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/158YEnk91iKiX2QFEatCLh_S2Emq92B5q

# **Project Name** :   **Hotel Booking Analysis**

##### **Project Type**    - EDA
##### **Contribution**    - Individual
##### **Team Member 1 -** Rahna P

# **Project Summary -**

The primary goal of this project is to perform Exploratory Data Analysis (EDA) on a dataset related to hotel bookings. EDA involves analyzing and visualizing data to gain insights, discover patterns, and identify potential trends. The dataset used for this analysis contains information related to hotel bookings. It includes variables such as customer demographics, booking channels, reservation details, and cancellation status.
Data Cleaning and Preprocessing:
The journey begins with data cleaning and preprocessing, ensuring the dataset's integrity. Handling missing values, outliers, and standardizing data formats are imperative steps to guarantee the reliability of subsequent analyses. By addressing these aspects, we create a foundation for a robust exploration of the dataset.

**Descriptive Statistics:**

To gain an initial understanding of the dataset, we calculate descriptive statistics, offering a snapshot of key variables. Measures of central tendencies, dispersions, and identification of potential outliers pave the way for a nuanced interpretation of the data. This step sets the stage for more detailed analyses.

**Data Visualization:**

Visualization is a powerful tool in uncovering patterns and relationships within data. Through the use of histograms, scatter plots, and pie charts, we bring the data to life. Visual exploration extends to time series plots, providing insights into booking trends over different periods. These visualizations serve as a lens through which we can understand the distribution and dynamics of key variables.

**Customer Demographics Analysis:**

Understanding the composition of customers is pivotal in tailoring services. In this phase, we delve into the distribution of customers based on demographics such as age, country of origin, and party composition. By discerning the impact of demographics on booking patterns, we equip hotel management with insights to personalize services and target specific customer segments.

**Booking Patterns and Lead Time Analysis:**

Temporal aspects of bookings, including peak periods and lead times, are critical considerations for hotel management. By analyzing booking patterns over time and exploring lead times, we aim to identify trends that can aid in resource allocation, staff planning, and strategic marketing efforts.

**Cancellation Analysis:**

Booking cancellations pose challenges for the hospitality industry. In this phase, we scrutinize factors contributing to cancellations, evaluating the relationship between cancellations and variables such as lead time, room type, and customer characteristics. Uncovering reasons for cancellations equips hotel managers with the knowledge needed to implement effective mitigation strategies.

**Channel and Market Segment Analysis:**

Booking channels and market segments are key drivers of revenue. In this segment of the analysis, we assess the effectiveness of different booking channels and analyze market segments to understand the sources and behaviors of bookings. This insight enables hotel management to optimize distribution strategies and tailor marketing approaches for maximum impact.

**Expected Outcomes and Benefits:**

The culmination of this EDA project is anticipated to yield a plethora of insights. Identification of key factors influencing booking decisions, understanding cancellation trends, and determining the most effective booking channels are among the expected outcomes. Armed with these insights, hotel stakeholders can make informed decisions, tailor marketing strategies to customer preferences, and optimize resource allocation and inventory management.

**Deliverables:**

The project concludes with a comprehensive report that encapsulates descriptive statistics, visually compelling insights, key findings, and actionable recommendations. This report stands as a valuable resource for hotel stakeholders, providing them with the tools needed to navigate the complexities of the hospitality industry, enhance customer satisfaction, and drive business success through data-driven strategies.

# **GitHub Link -**

Provide your GitHub Link here.

# **Problem Statement**

The hotel industry is characterized by its dynamic and multifaceted nature, where factors such as customer preferences, booking channels, and temporal variations play crucial roles in shaping the business landscape. The primary challenge faced by hotel management is the need to make informed decisions to enhance customer satisfaction, optimize resource allocation, and maximize revenue. This necessitates a deep understanding of the intricate patterns within the hotel booking data.

**Key Challenges:**

Customer Behavior Analysis:

Understanding the diverse demographics of hotel guests and how their preferences influence booking decisions.
Identifying patterns in stays, lead times, and other temporal aspects to align services with customer expectations.

Cancellation Trends:

Addressing the issue of booking cancellations by uncovering the reasons behind cancellations.Developing effective strategies to minimize cancellations and mitigate their impact on revenue.

Booking Channel Effectiveness:

Assessing the performance and effectiveness of different booking channels.
Optimizing distribution strategies to maximize bookings through the most efficient channels.

Resource Allocation and Inventory Management:

Balancing the allocation of resources, including staff and rooms, to meet varying demand.Strategically managing room inventory to avoid overbooking or underutilization.

Tailoring Marketing Strategies:

Crafting marketing approaches that resonate with different customer segments.
Leveraging insights to personalize promotions, improve customer engagement, and drive direct bookings.

Objectives of the Analysis:

Customer Insights:

Identify key demographic segments and understand their booking preferences.
Analyze booking patterns to tailor services and marketing strategies to specific customer needs.

Cancellation Mitigation:

Uncover factors contributing to booking cancellations.
Develop strategies to minimize cancellations and retain bookings.

Channel Optimization:

Evaluate the effectiveness of various booking channels.
Optimize distribution strategies to increase bookings through high-performing channels.

Resource and Inventory Optimization:

Analyze temporal patterns to optimize staff allocation.
Implement inventory management strategies to avoid underbooking or overbooking.

Marketing Personalization:

Understand the effectiveness of past marketing efforts.
Use demographic and behavioral insights to personalize marketing strategies for different customer segments.
Expected Outcomes:

Informed Decision-Making:

Equip hotel management with insights to make data-driven decisions.
Improve overall operational efficiency and resource utilization.
Enhanced Customer Satisfaction:

Tailor services and marketing to align with customer preferences.
Minimize cancellations and provide a seamless booking experience.
Optimized Revenue Generation:

Maximize revenue by identifying and leveraging high-performing booking channels.
Implement strategies to minimize revenue loss due to cancellations.
Deliverables:

The ultimate goal is to provide a comprehensive report containing actionable insights, visualizations, and strategic recommendations. This report will serve as a valuable guide for hotel stakeholders, offering a roadmap to navigate the challenges inherent in the hotel industry and unlock the full potential of their operations.

#### **Define Your Business Objective?**

Answer Here.

# **General Guidelines** : -

1.   Well-structured, formatted, and commented code is required.
2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.
     
     The additional credits will have advantages over other students during Star Student selection.
       
             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go
                       without a single error logged. ]

3.   Each and every logic should have proper comments.
4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.
        

```
# Chart visualization code
```
            

*   Why did you pick the specific chart?
*   What is/are the insight(s) found from the chart?
* Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

5. You have to create at least 20 logical & meaningful charts having important insights.


[ Hints : - Do the Vizualization in  a structured way while following "UBM" Rule.

U - Univariate Analysis,

B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)

M - Multivariate Analysis
 ]

# ***Let's Begin !***

## ***1. Know Your Data***

### Import Libraries
"""

# Import Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load Dataset
from google.colab import drive
drive.mount('/content/drive')
path = '/content/drive/MyDrive/Almabetter project/module_2/Hotel Bookings.csv'
df_hotel_booking= pd.read_csv(path)

# Dataset First Look
df_hotel_booking

# first 10 rows
df_hotel_booking.head(10)

# last 10 rows
df_hotel_booking.tail(10)

# columns name
df_hotel_booking.columns

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
rows, columns = df_hotel_booking.shape

print(f"Number of rows: {rows}")
print(f"Number of columns: {columns}")

"""### Dataset Information"""

# Dataset Info
df_hotel_booking.info()

"""#### Duplicate Values"""

# Dataset Duplicate Value Count
duplicates = df_hotel_booking.duplicated()
# Count the number of duplicates
num_duplicates = duplicates.sum()
print(f"Number of duplicate rows: {num_duplicates}")
# Display rows with duplicate values
duplicate_rows = df_hotel_booking[duplicates]
print("Rows with duplicate values:")
duplicate_rows

# Remove duplicates
df_hotel_booking.drop_duplicates(inplace=True)

# Count the number of unique rows
unique_rows = df_hotel_booking.shape[0]

# Print the number of unique rows
print(unique_rows)

#Resetting the index of the DataFrame
df_hotel_booking.reset_index(inplace=True)

# Display the DataFrame to see the changes
df_hotel_booking

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
missing_values_count = df_hotel_booking.isnull().sum().sort_values(ascending=False)
print("Missing values count for each column:")
print(missing_values_count)

# Create a summary DataFrame
df_copy=pd.DataFrame(index=df_hotel_booking.columns)
df_copy['Datatype']=df_hotel_booking.dtypes
df_copy['Non Null Value']=df_hotel_booking.count()
df_copy['Null Value']=df_hotel_booking.isnull().sum()
df_copy['percentage of Null value']=df_copy['Null Value']/df_copy['Non Null Value']*100
df_copy

# Calculate the total number of missing values in the DataFrame
total_missing_values = df_hotel_booking.isnull().sum().sum()

# Output the result
print(f"Total number of missing values in the entire dataset: {total_missing_values}")

# Assuming 'Column1' is the column you want to check
missing_values_in_column1 = df_hotel_booking['hotel'].isnull().sum()

print(f"Number of missing values in 'Column1': {missing_values_in_column1}")

# Visualizing the missing values
import matplotlib.pyplot as plt
import seaborn as sns

# Assuming 'df_hotel_booking' is your DataFrame
plt.figure(figsize=(8,4))
sns.heatmap(df_hotel_booking.isnull(), cmap='viridis', cbar=False)
plt.title('Missing Values Heatmap')
plt.show()

"""### What did you know about your dataset?

The dataset comprises 119,390 rows and 32 columns, representing a substantial
volume of hotel booking records.The columns exhibit diverse data types, with a mix of object (categorical), integer, and float types. Categorical columns include details about the hotel, arrival date, meal preferences, market segments, and reservation status etc.Several columns contain missing values. Notably, 'company' has an exceptionally high percentage of missing values (93.8%), 'agent' has a significant number of missing values (15.9%), and 'country' has a moderate number of missing values (0.41%). Appropriate handling of missing values is crucial for meaningful analysis.

The dataset encompasses a variety of numeric features capturing booking details, such as lead time, number of nights stayed, and customer demographics. Categorical features include information about the hotel type, meal preferences, distribution channels, and reservation status.
Imputation strategies may be applied to handle missing values in numeric columns ('children', 'agent'). Categorical imputation is advisable for the 'country' column. The 'company' column, with an overwhelmingly high number of missing values, may be subject to removal based on its relevance.

The 'company' column presents a challenge due to its substantial missing values, necessitating careful consideration of its impact on analyses. Decisions on handling missing values and column relevance should align with the objectives of the analysis or modeling project.

## ***2. Understanding Your Variables***
"""

# Dataset Columns
df_hotel=df_hotel_booking.copy()
print(list(df_hotel.columns))

# Dataset Describe
df_hotel.describe(include='all')

"""### Variables Description

**hotel:**
Type of hotel (Categorical: 'Resort Hotel' or 'City Hotel').

**is_canceled:**

Binary indicator of whether the booking was canceled (Binary: 0 for not canceled, 1 for canceled).

**lead_time:**

Number of days between booking date and arrival date (Numeric).

**arrival_date_year:**

Year of arrival date (Numeric).

**arrival_date_month:**

Month of arrival date (Categorical: January to December).

**arrival_date_week_number:**

Week number of the year for arrival date (Numeric).

**arrival_date_day_of_month:**

Day of the month for arrival date (Numeric).


**stays_in_weekend_nights:**

Number of weekend nights stayed (Numeric).
**stays_in_week_nights:**

Number of weekday nights stayed (Numeric).

**adults:**

Number of adults (Numeric).

**children:**

Number of children (Numeric).

**babies:**

Number of babies (Numeric).

**meal:**

Type of meal booked (Categorical: 'Undefined/SC', 'BB' for Bed & Breakfast, 'HB' for Half Board, 'FB' for Full Board).

**country:**

Country of origin of the customer (Categorical).

**market_segment:**

Market segment designation (Categorical).

**distribution_channel:**

Booking distribution channel (Categorical).

**is_repeated_guest:**

Binary indicator of whether the guest is a repeated guest (Binary: 0 for not repeated, 1 for repeated).

**previous_cancellations:**

Number of previous booking cancellations by the customer (Numeric).

**previous_bookings_not_canceled:**

Number of previous bookings not canceled by the customer (Numeric).

**reserved_room_type:**

Type of room reserved (Categorical).

**assigned_room_type:**

Type of room assigned (Categorical).

**booking_changes:**

Number of changes made to the booking (Numeric).

**deposit_type:**

Type of deposit made for the booking (Categorical).

**agent:**

ID of the booking agent (Numeric).

**company:**

ID of the company (Numeric).

**days_in_waiting_list:**

Number of days the booking was in the waiting list before it was confirmed (Numeric).

**customer_type:**

Type of customer (Categorical: 'Transient', 'Contract', 'Group', 'Transient-Party').

**adr:**

Average Daily Rate, indicating the average rental income per paid occupied room per night (Numeric).

**required_car_parking_spaces:**

Number of parking spaces requested by the customer (Numeric).

**total_of_special_requests:**

Number of special requests made by the customer (Numeric).

**reservation_status:**

Reservation last status (Categorical: 'Canceled', 'Check-Out', 'No-Show').

**reservation_status_date:**

Date when the reservation status was last updated (Date).

### Check Unique Values for each variable.
"""

# Check Unique Values for each variable.
for colu in df_hotel.columns:
  non_unique_values=len(df_hotel[colu].unique())
  print(colu,':',non_unique_values)

# Create a Pandas Series with unique values for each column
unique_values_series = pd.Series({col: df_hotel[col].unique() for col in df_hotel})

# Display the Pandas Series
print(unique_values_series)

"""## 3. ***Data Wrangling***

### Data Wrangling Code
"""

# Write your code to make your dataset analysis ready.
# Calculate the total number of missing values for each column, sort in descending order, and display the top 4 columns
top_missing_values = df_hotel.isnull().sum().sort_values(ascending=False)[:4]

# Display the result
print(top_missing_values)

# Select 'Null Value' and 'percentage of Null value' columns, sort by 'Null Value' column in descending order, and display the top 4 rows
df_copy[['Null Value', 'percentage of Null value']].sort_values('Null Value', ascending=False)[:4]

# Drop the 'company' column
df_hotel.drop(['company'], axis=1,inplace=True)

# Fill missing values with zeros
df_hotel.fillna(value=0, inplace=True)

# Check for remaining missing values
print(df_hotel.isnull().sum())

# Fill missing values in the 'country' column with 'other'
df_hotel['country'].fillna(value='other', inplace=True)

# Check for remaining missing values in the 'country' column
print(df_hotel['country'].isnull().sum())

# Fill missing values in the 'children' column with '0'
df_hotel['children'].fillna(value='0', inplace=True)

# Check for remaining missing values in the 'children' column
print(df_hotel['children'].isnull().sum())

# information about df_hotel
df_hotel.info()

# Convert 'children' column to integer data type
df_hotel['children'] = df_hotel['children'].astype(np.int64)

# Convert 'agent' column to integer data type
df_hotel['agent'] = df_hotel['agent'].astype(np.int64)

# Modified information about df_hotel
df_hotel.info()

# Calculate 'total_night' column by summing 'stays_in_week_nights' and 'stays_in_weekend_nights'
df_hotel['total_night'] = df_hotel['stays_in_week_nights'] + df_hotel['stays_in_weekend_nights']

# Display the 'total_night' column
print(df_hotel['total_night'])

# Calculate 'revenue' column by multiplying 'total_night' and 'adr'
df_hotel['revenue'] = df_hotel['total_night'] * df_hotel['adr']

# Display the 'revenue' column
print(df_hotel['revenue'])

# Calculate 'total quest' column by adding 'adults' and 'children'
df_hotel['total quest'] = df_hotel['adults'] + df_hotel['children']

# Display the 'total uest' column
print(df_hotel['total quest'])

# Create 'canceled' column based on the values in 'is_canceled' column
df_hotel['canceled'] = df_hotel['is_canceled'].replace([0, 1], ['not canceled', 'is canceled'])

# Display the 'canceled' column
print(df_hotel['canceled'])

# Create 'is_repeated_guest_1' column based on the values in 'is_repeated_guest' column
df_hotel['is_repeated_guest_1'] = df_hotel['is_repeated_guest'].replace([0, 1], ['not repeated_guest', 'is repeated_guest'])

# Display the 'is_repeated_guest_1' column
print(df_hotel['is_repeated_guest_1'])

# Group by 'hotel' column and calculate total revenue for each hotel
hotel_wise_total_revenue = df_hotel.groupby('hotel')['revenue'].sum()

# Display the hotel-wise total revenue
print(hotel_wise_total_revenue)

#display the dataset df_hotel
df_hotel

# Select 'hotel' and 'revenue' columns
df_hotel[['hotel','revenue']]

"""What all manipulations have you done and insights you found?

**Handling Missing Values:**

Filled missing values in the 'country' column with the value 'other'.
Filled missing values in the 'children' column with the value '0'.
Additional Feature Engineering:

Created a new column 'total_night' by summing 'stays_in_week_nights' and 'stays_in_weekend_nights'.
Calculating Revenue:

Calculated a new column 'revenue' by multiplying 'total_night' with 'adr'.
Total Guests:

Created a new column 'total_quest' by summing 'adults' and 'children'.
Categorizing Cancellation Status:

Created a new column 'canceled' based on the 'is_canceled' column, replacing 0 with 'not canceled' and 1 with 'is canceled'.
Categorizing Repeated Guest Status:

Created a new column 'is_repeated_guest' based on the 'is_repeated_guest' column, replacing 0 with 'not repeated_guest' and 1 with 'is repeated_guest'.
Hotel-wise Total Revenue:

Calculated the total revenue for each hotel by grouping the data based on the 'hotel' column.

## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***

**Univariate Analysis:** Univariate analysis involves analyzing a single variable at a time. It's a fundamental step in exploratory data analysis (EDA) and helps in understanding the distribution, central tendency, variability, and shape of individual variables

# **1) Which type of hotel is mostly prefered by the guests?**
"""

# Get the count of each hotel type
most_df = df_hotel['hotel'].value_counts()
# Plotting the pie chart
most_df.plot.pie(explode=[0.05, 0.05], autopct='%1.2f%%', shadow=True, figsize=(10, 8), fontsize=20, startangle=90, labeldistance=1.2)
# Add title with custom formatting
plt.title('Most Preferred Hotel in Percentage', bbox={'facecolor': '0.8', 'pad': 2})
# Display legend
plt.legend()
plt.ylabel(None)
# Show the plot
plt.show()

"""###**Observation**
Guests tend to prefer City Hotels, making them the most favored
    choice, and consequently, City Hotels experience the highest number of booking

1. Why did you pick the specific chart?

Pie chart is used because the pie chart to presenting the data indicating the hotel with the highest number of bookings

2. What is/are the insight(s) found from the chart?

Here, we found that the booking number is Higher in City Hotel which is 61.12% than Resort Hotel which is 38.87%. Hence we can say that City hotel has more consumption

3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, this data reveals positive business impacts for both hotels:

City Hotel: Implemented additional services to attract more guests, thereby increasing overall revenue.

Resort Hotel: Explored strategies to attract guests and learned from the successful approaches adopted by city hotels

# **2) What is the percentage of hotel booking cancellations?**
"""

# Get the count of cancellation status
df_hotel['canceled'].value_counts().plot.pie(explode=[0.05, 0.05], autopct='%1.2f%%', shadow=True, figsize=(10, 8), fontsize=20, startangle=90, labeldistance=1.2)
# Add title with custom formatting
plt.title("Cancellation and Non-Cancellation", bbox={'facecolor': '0.8', 'pad': 3})
# Display legend
plt.legend()
plt.ylabel(None)
# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a pie chart because it effectively shows the distribution of cancellation status (canceled vs. non-canceled) as a percentage of the whole. This makes it easy to compare the proportion of cancellations to non-cancellations visually.

##### 2. What is/are the insight(s) found from the chart?

Here, we found that overall more than 27.49% of booking got cancelled

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Here, it is evident that cancellations account for over 27% of the total bookings.

Solution: To address this issue, it is recommended to analyze the reasons behind booking cancellations and implement business-level strategies to mitigate them.

# **3)Which booking distribution channel is the most utilized?**
"""

# Aggregating counts of distribution channels
dist_df = df_hotel.groupby('distribution_channel').size().reset_index(name='channel count')

# Creating explode data
my_explode = (0.05,) * len(dist_df)

# Adding percentage columns to the distribution_channel_df
dist_df['percentage'] = round(dist_df['channel count'] * 100 / df_hotel.shape[0], 1)
plt.figure(figsize=(15, 6))

# Plotting the chart values in the pie chart
plt.pie(dist_df['channel count'], labels=None, explode=my_explode, startangle=50, autopct='%1.1f%%', shadow=True, labeldistance=1.2)

# Adding legends with percentage using list comprehension
labels = [f'{l}, {s}%' for l, s in zip(dist_df['distribution_channel'], dist_df['percentage'])]
plt.legend(bbox_to_anchor=(0.85, 1), loc='upper left', labels=labels)

# Setting the chart title and Show the chart
plt.title('Preferred Booking Distribution Channels by Guests', fontsize=16)
plt.axis('equal')
plt.show()

"""1. Why did you pick the specific chart?

The pie chart is commonly used to visualize proportions or percentages of a whole. In this case, it's suitable for showing the distribution of booking channels as percentages of the total bookings.

2. What is/are the insight(s) found from the chart?

The insights derived suggest that the distribution channel primarily utilized by guests is TA/TO (Travel Agents/Tour Operators),that is 79.1"

3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights can positively impact business by highlighting the effectiveness of the TA/TO channel, but over-reliance on it may pose risks, necessitating diversification.

#**4) What is the percentage distribution of "Customer Type"?**
"""

# Get the count of each customer type
df = df_hotel['customer_type'].value_counts()
# Plotting a pie chart with custom settings
df.plot.pie(explode=[0.05]*len(df), shadow=True, autopct='%1.1f%%', figsize=(12, 8), fontsize=15)
# Assigning labels for the legend
labels = df.index.tolist()
# Adding title and legend'
plt.title('Percentage Distribution of Customer Types')
plt.legend(bbox_to_anchor=(0.85, 1), loc='upper left', labels=labels)
plt.ylabel(None)
# Display the plot
plt.show()

"""1. Why did you pick the specific chart?

A pie chart effectively demonstrates how each customer type contributes to the total. Each slice represents a proportion of the whole, making it easy to see the relative distribution of customer types.

2. What is/are the insight(s) found from the chart?

The transient customer type predominates, comprising 82.4% of the total bookings. Conversely, the percentage of bookings associated with groups is notably low

3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Certainly!,Positive Impact:Targeted marketing for transient guests can boost revenue.
Revenue optimization strategies can be tailored for group bookings.
Negative Growth Insights:Limited group bookings may miss revenue opportunities.
Over-reliance on transient guests could pose risks if market conditions change.

# **5)Which agent has the highest number of bookings?**
"""

# return highest bookings made by agents
highest_bookings= df_hotel.groupby(['agent'])['agent'].agg({'count'}).reset_index().rename(columns={'count': "Most_Bookings" }).sort_values(by='Most_Bookings',ascending=False)
# as agent 0 was NAN value and we replaced it with 0 and indicates no bookings.so droping.
highest_bookings.drop(highest_bookings[highest_bookings['agent']==0].index,inplace=True)
# taking top 10 bookings made by agent
top_ten_highest_bookings=highest_bookings[:10]
top_ten_highest_bookings

#assigning color palette
bar_color = sns.color_palette("muted", len(top_ten_highest_bookings))
plt.figure(figsize=(18, 8))

# Creating a bar plot with custom colors
sns.barplot(x=top_ten_highest_bookings['agent'],
            y=top_ten_highest_bookings['Most_Bookings'],
            order=top_ten_highest_bookings['agent'],
            palette=bar_color)
# Adding labels and title
plt.xlabel('Agent No')
plt.ylabel('Number of Bookings')
plt.title("Highest number of booking BY Agent?")
# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

Bar plots are ideal for comparing categorical data, like agent numbers, and their associated numerical values, such as booking counts. They offer a clear visualization of the top booking agents in this scenari

##### 2. What is/are the insight(s) found from the chart?

Here, we found that Agent ID number 9 made most of the bookings

Are there any insights that lead to negative growth? Justify with specific reason.

Insights pinpoint top agents for acknowledgment and assistance, driving revenue. Yet, depending heavily on a few agents poses risks, underscoring the importance of a varied and robust network.
Most of the agent not make higher booking, product issues, or ineffective marketing strategies,

# **6)What is the percentage of repeated guests?**
"""

# Define custom colors
custom_colors = ['Green','Red']

# Plotting the pie chart with custom colors
re_df=df_hotel['is_repeated_guest_1'].value_counts()
re_df.plot.pie(explode=(0.05, 0.05), autopct='%1.1f%%', shadow=True, figsize=(12, 8), fontsize=20, colors=custom_colors)

# Adding title and legend
plt.title("Percentage of repeated guests", bbox={'facecolor': '0.8', 'pad': 3})
plt.legend()
plt.ylabel(None)
# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a pie chart because it's effective for showing the percentage distribution of repeated and non-repeated guests. It's clear and intuitive, making it easy to understand the relative frequencies of each category.

##### 2. What is/are the insight(s) found from the chart?

Based on the insight above, it is evident that 3.86% of guests are returning guests.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

The insight about the percentage of returning guests can positively impact the business by informing strategies to enhance customer loyalty. There isn't a specific insight indicating negative growth, but a low percentage of returning guests may signal potential issues with customer retention that need to be addressed. To boost the number of repeat guests, the hotel could consider offering loyalty discounts to incentivize guests to return.

## **7)What is the most preferred type of food by guests?**
"""

#setting chart size
plt.figure(figsize=(18, 8))
# Define custom colors for the bars
bar_color = 'pastel'
# Plotting the count plot with custom color
ax = sns.countplot(x=df_hotel['meal'], palette=bar_color)
# Adding labels and title for the count plot
plt.xlabel('Meal Type', fontsize=20)
plt.ylabel('Count Of Food Type', fontsize=20)
plt.title("Preferred food Type by guests", fontsize=20)
# Annotating count values on top of each bar
for p in ax.patches:
    ax.annotate(f'{p.get_height()}', (p.get_x() + p.get_width() / 2., p.get_height()), ha='center', va='center', fontsize=15, xytext=(0, 5), textcoords='offset points')

# Show the count plot
plt.show()

"""##### 1. Why did you pick the specific chart?

The count plot is chosen for its effectiveness in displaying the frequency of each meal type, providing a clear and concise representation of the preferred meal types.

##### 2. What is/are the insight(s) found from the chart?

The chart indicates that "BB" (Bed and Breakfast) is the most preferred meal type among guests, while "HB" (Half Board) and "SC" (Self Catering) are equally preferred.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Insights show that guests prefer Bed and Breakfast (BB), allowing stakeholders to plan ahead for its ingredients and ensure timely delivery. Adapting offerings to guest preferences boosts business, but ignoring dissatisfaction risks losing customers and revenue.

## **8)Which year experienced the highest number of bookings?**
"""

# Define custom color palette
custom_palette = ["#2ecc91", "#3497db"]   # Example colors, you can replace them with any colors you prefer

# Set plot size
plt.figure(figsize=(12, 8))

# Plot with countplot
ax = sns.countplot(x=df_hotel['arrival_date_year'], hue=df_hotel['hotel'], palette=custom_palette)

# Adding title
plt.title("Booking Count Over Years")

# Annotating count values on top of each bar
for p in ax.patches:
    ax.annotate(f'{p.get_height()}', (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='center', fontsize=12, xytext=(0, 5), textcoords='offset points')

# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

The countplot effectively compares booking numbers across different years and hotel types, making it easy to identify trends and popularity.

##### 2. What is/are the insight(s) found from the chart?

In 2016, bookings were at their peak, while in 2015, they were 7,000 bookings lower. City hotels accounted for the majority of bookings overall.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Insights can positively impact business strategy and revenue by leveraging successful booking trends and addressing any declines. However, neglecting to address declines may lead to stagnation or negative growth.

# **9)Which month experienced the highest number of bookings?**
"""

# Group by arrival date month and count bookings
month_wise_booking_df = df_hotel.groupby(['arrival_date_month'])['hotel'].count().reset_index().rename(columns={'hotel': 'Counts'})

# Create list of months in order
months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']

# Create a categorical column for arrival date month with specified order
month_wise_booking_df['arrival_date_month'] = pd.Categorical(month_wise_booking_df['arrival_date_month'], categories=months, ordered=True)

# Sort by arrival date month
month_wise_booking_df = month_wise_booking_df.sort_values('arrival_date_month')
month_wise_booking_df

# Plotting the data in a pie chart
plt.figure(figsize=(8, 8))  # Set the figure size
plt.pie(month_wise_booking_df['Counts'], labels=month_wise_booking_df['arrival_date_month'], autopct='%1.1f%%', startangle=140)
# Adding title
plt.title('Month wise booking Percentage')
# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose the pie chart because it effectively displays the distribution of bookings across different months, making it easy to compare the relative proportions of bookings for each month at a glance.

##### 2. What is/are the insight(s) found from the chart?

The insights reveal that July and August are peak booking months, while November has the lowest bookings. Summer months see high demand, whereas bookings decline towards the end of the year.Answer Here

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights can positively impact business by optimizing revenue and resource allocation. However, challenges may arise during low-demand periods if not addressed, potentially leading to revenue loss and competitive disadvantage

## **10)Which country do most guests come from?**
"""

# Aggregating counts of guests from different countries
country_df = df_hotel['country'].value_counts().reset_index().rename(columns={'index': 'Country', 'country': 'Count of Guests'})[:10]
# Visualizing by plotting the graph
plt.figure(figsize=(20, 8))
# Using the 'viridis' color palette
sns.barplot(x=country_df['Count of Guests'], y=country_df['count'], palette='viridis')
plt.xlabel('Country', fontsize=12)
plt.ylabel('Number of Guests', fontsize=12)
plt.title("Number of Guests from Different Countries", fontsize=15)
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a bar chart because it effectively compares the number of guests from different countries, making it easy to visualize and understand the distribution of guests among the top countries.

##### 2. What is/are the insight(s) found from the chart?

These insights provide a snapshot of the top countries contributing to the guest arrivals, with Portugal leading by a significant margin.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights can positively impact the business by guiding targeted marketing efforts and enhancing customer service. However, over-reliance on guests from a few countries may pose a risk, emphasizing the need for diversification to mitigate potential negative impacts on growth.

# **11)Which market segment accounts for the highest number of bookings?**
"""

# Set the figure size
plt.figure(figsize=(15, 5))
# Define custom colors for the bars
bar_color = 'pastel'
# Plot the count of market segments
ax = sns.countplot(x=df_hotel['market_segment'], order=df_hotel['market_segment'].value_counts().index,palette=bar_color)

# Add title
plt.title('market segment accounts of bookings', fontsize=20)

# Annotate count values on top of each bar
for p in ax.patches:
    ax.annotate(f'{p.get_height()}', (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='center', fontsize=12, xytext=(0, 5), textcoords='offset points')

# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a count plot because it effectively displays the distribution of market segments in bookings. It allows for easy comparison of the frequency of each market segment, providing insights into the distribution of booking preferences.

##### 2. What is/are the insight(s) found from the chart?

The insight reveals that the Online Travel Agent (TA) segment records the highest number of bookings.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insight that Online Travel Agents (TA) have the most bookings can positively impact business by informing targeted marketing and partnership strategies. However, over-reliance on them may pose risks like dependency and margin compression. Diversifying distribution channels and investing in direct bookings can mitigate these risks.

# **12) Which is the most preferred room type among customers?**
"""

#set the plot size
plt.figure(figsize=(18, 8))
bar_color = 'deep'
# Plotting the count of assigned room types
sns.barplot(x=df_hotel['assigned_room_type'].value_counts().index,
            y=df_hotel['assigned_room_type'].value_counts().values,
            order=df_hotel['assigned_room_type'].value_counts().index,palette=bar_color)

# Set xlabel for the plot
plt.xlabel('Room Type')

# Set ylabel for the plot
plt.ylabel('Count of Room Type')

# Set title for the plot
plt.title("Most Preferred Room Type")

# Rotate x-axis labels for better readability
plt.xticks(rotation=45)

# Show the plot
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a bar chart because it effectively compares the counts of different room types, making it easy to visualize the most preferred room type.

##### 2. What is/are the insight(s) found from the chart?

The chart highlights that room type 'A' is the most preferred choice among guests.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, identifying room type 'A' as the most preferred by guests can positively impact customer satisfaction and revenue. However, over-reliance on one room type may neglect other preferences, leading to potential dissatisfaction and booking risks.

**Bivariate Analysis and Multivariate Analysis :**Bivariate analysis and multivariate analysis are two important components of exploratory data analysis (EDA) that involve analyzing relationships between variables, but they differ in the number of variables they consider simultaneously.
Bivariate analysis examines the relationship between two variables at a time.
Multivariate analysis involves the simultaneous analysis of three or more variables.

# **13)Which hotels have the highest number of repeating guests?**
"""

# Group by hotel type and calculate the count of repeated guests
repeated_guests_by_hotel = df_hotel.groupby('hotel')['is_repeated_guest'].sum()

# Plotting
plt.figure(figsize=(8, 6))
ax = repeated_guests_by_hotel.plot(kind='bar', color=['lightgreen', 'skyblue'])
plt.title('Number of Repeated Guests by Hotel')
plt.xlabel('Hotel')
plt.ylabel('Number of Repeated Guests')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Add count values on top of each bar
for i, v in enumerate(repeated_guests_by_hotel):
    ax.text(i, v + 0.1, str(v), ha='center', va='bottom')

plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a bar chart because it's good for comparing counts (like the number of repeated guests) across different categories (hotels). It's clear, easy to understand, and commonly used for this type of data. Plus, it lets us add annotations to show the exact counts on each bar.

##### 2. What is/are the insight(s) found from the chart?

The insight from the chart is that the City Hotel has slightly more repeated guests compared to the Resort Hotel.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the gained insight that the City Hotel has slightly more repeated guests than the Resort Hotel can indeed help create a positive business impact.Positive Impact: City Hotel can boost revenue through targeted marketing and improved guest experience for repeat guests.
Negative Impact: Resort Hotel's lower repeat guests may indicate dissatisfaction, leading to potential revenue loss and competitive disadvantage.

# **14)Which hotel has the longest leading time?"**
"""

# Group by hotel type and calculate the average lead time
average_lead_time_by_hotel = df_hotel.groupby('hotel')['lead_time'].mean()

# Plotting
plt.figure(figsize=(8, 6))
ax = average_lead_time_by_hotel.plot(kind='bar', color=['skyblue','lightgreen'])
plt.title('Average Lead Time by Hotel')
plt.xlabel('Hotel')
plt.ylabel('Average Lead Time (days)')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Add average lead time values on top of each bar
for i, v in enumerate(average_lead_time_by_hotel):
    ax.text(i, v + 0.1, f'{v:.2f}', ha='center', va='bottom')

plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a bar chart because it effectively illustrates comparisons between different categories—in this case, the average lead time for bookings at different hotels. This type of visualization makes it easy to see which hotel has a longer waiting period for reservations, facilitating a straightforward and immediate comparison.

##### 2. What is/are the insight(s) found from the chart?

The key insight from the chart indicating that the City Hotel has a longer average lead time suggests that it generally takes longer to secure a booking at this hotel compared to the Resort Hotel. This could imply higher demand or fewer available dates at the City Hotel, which may reflect its popularity, location advantages, or a larger volume of bookings. Understanding this could help management strategize better in terms of pricing, promotions, and capacity planning to maximize occupancy and guest satisfaction.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Positive Impact,Better strategic planning and booking management at City Hotel due to understanding of demand.
Negative Potential,Longer wait times might frustrate customers and expose inefficiencies, risking customer loss and operational issues.

# **15)What is the average length of stay for guests in the hotel?**
"""

# Separate data for each hotel
resort_hotel_data = df_hotel[df_hotel['hotel'] == 'Resort Hotel']['total_night']
city_hotel_data = df_hotel[df_hotel['hotel'] == 'City Hotel']['total_night']
# Calculate the average stay by taking the mean of the 'total_nights' column
average_stay = df_hotel.groupby('hotel')['total_night'].mean()
# Print the average stay
print("The average length of stay is:")
print(average_stay)
# Plotting
plt.figure(figsize=(10, 6))
plt.hist(resort_hotel_data, bins=range(0, 31), color='skyblue', alpha=0.5, edgecolor='black', label='Resort Hotel')
plt.hist(city_hotel_data, bins=range(0, 31), color='salmon', alpha=0.5, edgecolor='black', label='City Hotel')
plt.title('Distribution of Stay Lengths by Hotel')
plt.xlabel('Number of Nights')
plt.ylabel('Frequency')
plt.legend()
plt.grid(True)
plt.show()

"""##### 1. Why did you pick the specific chart?

Histograms are great for showing how data is distributed. They display the frequency of different values within a dataset. By using different colors for each hotel, we can compare their stay length distributions easily.

##### 2. What is/are the insight(s) found from the chart?

Guests prefer shorter stays, with the optimal length being less than 7 days for both City and Resort hotels.City Hotel: The average length of stay is approximately 3 days (2.98 days).
Resort Hotel: The average length of stay is approximately 4 days (4.32 days).

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insight that guests prefer shorter stays can help create a positive business impact. By understanding this preference, hotels can tailor their services and marketing strategies accordingly. For example, they can offer attractive short-stay packages, optimize room turnover processes to accommodate more guests, and focus on providing exceptional experiences within shorter timeframes. This can lead to increased occupancy rates, higher customer satisfaction, and ultimately, improved revenue.

However, there might be a potential negative impact if hotels rely heavily on short-stay guests without considering the needs of long-stay guests. Long-stay guests often contribute significantly to revenue through extended bookings and additional spending on services and amenities. Ignoring their needs could lead to a loss of revenue and negative growth. Therefore, while optimizing for shorter stays, it's important for hotels to also maintain a balance and cater to the diverse preferences of their guests.

# **16)Which hotel generates the highest revenue?**
"""

# Calculate total revenue for each hotel
total_revenue_by_hotel = df_hotel.groupby('hotel')['revenue'].sum()

# Plotting
plt.figure(figsize=(8, 6))
ax = total_revenue_by_hotel.plot(kind='bar', color=['lightblue','skyblue'])
plt.title('Total Revenue by Hotel')
plt.xlabel('Hotel')
plt.ylabel('Total Revenue')
plt.xticks(rotation=0)
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Add value labels on top of each bar
for i, v in enumerate(total_revenue_by_hotel):
    ax.text(i, v + 10000, f'{v:.2f}', ha='center', va='bottom')

plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a bar chart to visualize the total revenue generated by each hotel because it effectively compares the revenue between different categories (hotels) using bars of varying lengths. This allows for easy identification of the hotel with the highest revenue.

##### 2. What is/are the insight(s) found from the chart?

The insight from the chart is that the City hotel generates more revenue compared to the Resort hotel. This suggests that the City hotel may have higher occupancy rates, charge higher average daily rates (ADR), or offer more premium services and amenities that contribute to greater revenue generation. Understanding this disparity in revenue between the two types of hotels can help inform business strategies such as pricing optimization, marketing efforts, and resource allocation to maximize revenue potential.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insight that the City hotel generates more revenue than the Resort hotel can help create a positive business impact. Understanding this difference allows hotel management to focus resources and efforts on maximizing revenue streams from the City hotel, potentially through targeted marketing campaigns, pricing strategies, and service enhancements tailored to the preferences of City hotel guests.

However, there might be potential negative growth if the Resort hotel neglects opportunities to improve revenue generation. For instance, if the Resort hotel fails to identify and address factors contributing to lower revenue, such as underutilized amenities, ineffective pricing strategies, or insufficient marketing efforts, it may experience stagnation or decline in revenue over time. Therefore, it's crucial for the Resort hotel to analyze the insights and take proactive steps to optimize revenue and maintain competitiveness in the market.

# **17)Which distribution channel has the highest Average Daily Rate (ADR)?**
"""

# Group by distribution channel and hotel, and calculate the average ADR
avg_adr_by_channel_hotel = df_hotel.groupby(['distribution_channel', 'hotel'])['adr'].mean()
print(avg_adr_by_channel_hotel)
# Unstack the DataFrame to pivot the 'hotel' index to columns
avg_adr_by_channel_hotel = avg_adr_by_channel_hotel.unstack()

# Plotting
plt.figure(figsize=(20, 15))
avg_adr_by_channel_hotel.plot(kind='bar', color=['skyblue', 'lightgreen'])
plt.title('Average Daily Rate by Distribution Channel and Hotel')
plt.xlabel('Distribution Channel')
plt.ylabel('Average Daily Rate (ADR)')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.legend(title='Hotel')

# Add value labels on top of each bar
for i, (index, row) in enumerate(avg_adr_by_channel_hotel.iterrows()):
    for j, value in enumerate(row):
        plt.text(i + j*0.2 - 0.1, value + 1, f'{value:.2f}', ha='center', va='bottom')

plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a grouped bar chart because it effectively compares the average daily rate (ADR) between different combinations of distribution channels and hotels. By grouping bars for each distribution channel and showing bars for each hotel within the group, this chart allows for easy comparison of ADR values across multiple categories.

##### 2. What is/are the insight(s) found from the chart?

GDS contributes significantly to ADR, indicating its importance in booking transactions. Understanding booking channels helps tailor marketing strategies effectively.The insight from the chart indicates that the Global Distribution System (GDS) channel has contributed more to generating the Average Daily Rate (ADR) compared to other distribution channels. This suggests that the GDS channel, which serves as a conduit between travel bookers and suppliers, including hotels, plays a significant role in facilitating bookings with higher ADR values.

Understanding that the GDS channel has a notable impact on ADR can help hotel management focus their marketing and sales efforts on leveraging this channel effectively. They may consider investing more resources in optimizing their presence on GDS platforms, offering competitive pricing and attractive packages to attract bookings through this channel.

Additionally, the distribution of bookings through Direct, TA/TO (Travel Agent/Travel Operator), and Undefined channels provides valuable insights into customer booking behavior. Identifying the predominant booking channels can inform marketing strategies and resource allocation, helping hotels tailor their approaches to effectively reach and engage their target audience across different channels.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, understanding the importance of the GDS channel can positively impact business by focusing marketing efforts. However, overreliance on one channel could limit growth.
Yes, the gained insights can lead to a positive business impact. Understanding that the Global Distribution System (GDS) channel contributes significantly to the Average Daily Rate (ADR) allows hotels to focus their marketing efforts and resources on optimizing their presence on GDS platforms. By offering competitive pricing and attractive packages through this channel, hotels can attract more bookings and increase revenue.

# **18)What is the Average Daily Rate (ADR) variation across different months?**
"""

# Group by month and hotel, and calculate the average ADR
avg_adr_by_month_hotel = df_hotel.groupby(['arrival_date_month', 'hotel'])['adr'].mean().unstack()

# Reindex the DataFrame to order months properly
months_order = pd.date_range(start='2022-01-01', periods=12, freq='M').strftime('%B')
avg_adr_by_month_hotel = avg_adr_by_month_hotel.reindex(months_order)

# Plotting
plt.figure(figsize=(12, 6))
avg_adr_by_month_hotel.plot(kind='bar', color=['skyblue', 'lightgreen'])
plt.title('Average Daily Rate by Month and Hotel')
plt.xlabel('Month')
plt.ylabel('Average Daily Rate (ADR)')
plt.xticks(rotation=45)
plt.legend(title='Hotel')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

I chose a grouped bar chart because it effectively compares the average daily rate (ADR) between different months and hotels. By grouping bars for each month and showing bars for each hotel within the group, this chart allows for easy comparison of ADR values across multiple categories.

##### 2. What is/are the insight(s) found from the chart?

The chart suggests that summer months see higher ADR for Resort hotels, possibly due to vacation preferences, while months like January and February offer lower ADR, making them ideal for guests to visit both Resort and City hotels.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights gained can help create a positive business impact by allowing hotels to tailor their marketing and pricing strategies accordingly. For example, knowing that summer months drive higher ADR for Resort hotels enables targeted marketing efforts to attract vacationers during this peak season, potentially increasing revenue.

However, relying solely on seasonal trends without considering other factors could lead to negative growth. For instance, if hotels overlook the potential for demand fluctuations due to external factors like economic conditions or travel restrictions, they may misjudge pricing strategies and fail to attract guests during off-peak seasons, resulting in reduced revenue and occupancy rates. Therefore, while seasonal insights are valuable, a comprehensive approach considering various factors is essential for sustained growth.
The insights can positively impact business by guiding targeted marketing strategies, but failure to consider other factors may lead to negative growth.

#### Chart - 19 - Correlation Heatmap
"""

# create Correlation
numeric_columns = df_hotel.select_dtypes(include=['number'])

# Setting the chart size
plt.figure(figsize=(15,10))

# Creating heatmap to visualize correlation of each column
sns.heatmap(numeric_columns.corr(), annot=True, cmap='coolwarm', fmt=".2f")

# Setting the title
plt.title('Correlation of the Columns', fontsize=20)

# Show the heatmap
plt.show()

"""##### 1. Why did you pick the specific chart?

Correlation heatmaps were utilized to identify potential relationships between variables and to gauge the strength of these relationships.

##### 2. What is/are the insight(s) found from the chart?

There's a positive correlation between lead_time and total_stay, suggesting that longer stays by customers result in increased lead time.
The variables adults, children, and babies are positively correlated, indicating that higher numbers of individuals lead to a higher Average Daily Rate (ADR).
There's a strong correlation between is_repeated_guest and previous bookings not canceled, indicating that repeated guests tend not to cancel their bookings.

#### Chart - 20 - Pair Plot
"""

# Pair Plot visualization code
sns.pairplot(df_hotel)
plt.show()

"""##### 1. Why did you pick the specific chart?

A pairs plot provides insights into the distribution of individual variables and the relationships between pairs of variables.

In the pairs plot, we can visualize the relationships between all the columns.

##### 2. What is/are the insight(s) found from the chart?

From the pairs plot, it's evident that an increase in cancellations correlates with a decrease in total stay duration. Additionally, there appears to be a positive correlation between the total number of people and the Average Daily Rate (ADR), suggesting that ADR and total occupancy are directly proportional to each other.

## **5. Solution to Business Objective**

#### What do you suggest the client to achieve Business Objective ?
Explain Briefly.

•	City hotels emerge as the favored choice among guests, reflecting their high activity level.

•	Approximately 27.52% of bookings are cancelled, suggesting an opportunity for loyalty incentives.

•	Preemptive stocking of raw materials for the popular Bed and Breakfast (BB) meal can minimize delays.

•	Increasing the number of rooms in City Hotels can mitigate waiting times.

•	Targeted offers can attract bookings from segments other than Travel Agents (TA).

•	Room type A is preferred by guests, suggesting a need for increased availability.

•	Low rates of repeat guests indicate areas for improvement to enhance guest retention.

•	City hotels experience longer waiting times compared to Resort hotels, indicating higher demand.

•	Optimal stays of less than 7 days signal an opportunity to tailor services for longer stays.

•	Majority of guests are from Portugal, suggesting potential for targeted marketing efforts.

•	Low retention rates underscore the need for strategies to encourage repeat visits.

•	A significant portion of bookings is made through TA/TO.

•	BB meal option is the most preferred among guests.

•	Most bookings occurred in 2016 for both City and Resort hotels.

•	City hotels exhibit higher Average Daily Rate (ADR) compared to Resort hotels.

•	Resort hotels have a higher average lead time.

•	City Hotel has slightly more repeated guests compared to the Resort Hotel.

# **Conclusion**

To achieve the business objectives effectively, I propose implementing dynamic pricing strategies, along with the introduction of enticing offers and packages to attract new clientele. Furthermore, to cultivate customer loyalty and encourage repeat business, the implementation of a loyalty points program is recommended, allowing customers to redeem points during subsequent bookings.

Additionally, enhancing the overall guest experience can significantly contribute to customer retention and satisfaction. This can be achieved by offering amenities such as ample parking spaces, dedicated kids' corners, and complimentary high-speed internet connections. These enhancements not only elevate the guest experience but also serve as attractive features to increase the volume of bookings.

### ***Hurrah! You have successfully completed your EDA Capstone Project !!!***
"""